language: rust
cache: cargo
matrix:
  include:
    # Stable channel.
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu
    - os: linux
      rust: stable
      env:
        - TARGET=x86_64-unknown-linux-musl
        - CC_x86_64_unknown_linux_musl=/usr/bin/musl-gcc
    - os: osx
      rust: stable
      env: TARGET=x86_64-apple-darwin
    - os: windows
      rust: stable
      env: TARGET=x86_64-pc-windows-msvc


    # Minimum Rust supported channel.
    - os: linux
      rust: 1.32.0
      env: TARGET=x86_64-unknown-linux-gnu


addons:
  apt:
    packages:
      # needed to build deb packages
      - fakeroot

env:
  global:
    # Default target on travis-ci.
    # Used as conditional check in the install stage
    - HOST=x86_64-unknown-linux-gnu
    # Used on the deployment script
    - PROJECT_NAME=lscolors

install:
  # prevent target re-add error from rustup
  - if [[ $TRAVIS_OS_NAME = linux && $HOST != $TARGET ]]; then rustup target add $TARGET; fi

script:
  # Incorporate TARGET env var to the build and test process
  - cargo build --target $TARGET --verbose
  - cargo test --target $TARGET --verbose
  - find . -maxdepth 3 | cargo run

before_deploy:
  - bash ci/before_deploy.bash

deploy:
  provider: releases
  # NOTE updating the `api_key.secure`
  # - go to: https://github.com/settings/tokens/new
  # - generate new token using `public_repo` scope
  # - encrypt it using: `travis encrypt API_KEY_HERE`
  # - paste the output below
  api_key:
    secure: "RtF/aUVRQYM9TgG4gxPhzsmffS3Mz9qEVBSEmuwaZZd/xh+kyt7QF/zgNxwP3Hc6tojngF7GtLDNm9Myu0a8dtsEadEWdA/ljbZlBPprPfVgXOo5N17NoGv3/eeHYQudKuJ3xy9WFU6Yf635NH2gkuZDaFQZ/iOdgJ6AGqDWvyUPfjUKBRB0JEKlNL3qOIWuaQ9RAEeIGHp4k3sXGIlCBaCmsy/QkC3yszMrqxBC6YY4fPUCKZpkUKJR42ZPavVoCFnZaWPm/SggjWlVXEma9WZJUv6JXt67TlNFrWjGHBcY/yoi8dZ74q+/dNK47cfhOwpdD6EtX8zyRJ+UhPnU/CCdom2DYBDVaQgdAIEi/kKukRuLF87+F0skx03CZTCG54TglKI8tdYwLqoVNA3ztUZB9HAVpGG8al+nLx4xUYR0sObRkJHcHyiwMP+xQ+M/btyl321Y0u4IbtCjtlBKjkSNFQNXwYJZR5H9E2X6Lo6MFzSjtG+wl0o9+mFFW/TiTIaSdsP+ABsTJqUBlVR2v9bIfcsCHXhWLi9JuoIkZQcpbqHSP6OWBFLBCu1+jixALwSnk+oDzHisgjaw84Rc+FkRTEav0wi6StyhDmpKxu61Q7RGdyyxgYYCwu19Z+EqmSF9RDsIHEPXiMn4R2XDi88NKIuKNJ1OYyLSrkXEM2E="
  # for uploading multiple files
  file_glob: true
  # NOTE explanation on each env variable
  # - PROJECT_NAME: name of the project, set on the `env.global` above
  # - TRAVIS_TAG: tag name that the build is being deployed for, usually the version number
  # - TARGET: target triple of the build
  file:
    - $PROJECT_NAME-$TRAVIS_TAG-$TARGET.*
    - $PROJECT_NAME*.deb
  # don't delete artifacts from previous stage
  skip_cleanup: true
  on:
    # deploy only if we push a tag
    tags: true
    # deploy only on stable channel that has TARGET env variable sets
    condition: $TRAVIS_RUST_VERSION = stable && $TARGET != "x86_64-pc-windows-msvc"

notifications:
  email:
    on_success: never
